{"question": "What is the overall idea of integration testing?", "answer": "The overall idea is a \"building block\" approach, in which verified assemblages are added to a verified base which is then used to support the integration testing of further assemblages."}{"question": "What is the purpose of integration testing?", "answer": "However, if the test cases and their results are not recorded properly, the entire integration process will be more complicated and may prevent the testing team from achieving the goal of integration testing."}{"question": "How much does testing cost?", "answer": "Testing costs 1/3 to 12 of the total cost of software development process."}{"question": "What is the best way to test a system?", "answer": "The Big Bang method is very effective for saving time in the integration testing process."}{"question": "What is the role of independent testing?", "answer": "An independent testing team is responsible for system testing."}{"question": "What is the purpose of integration testing?", "answer": "The tests are based on system specification."}{"question": "What is the purpose of integration testing?", "answer": "CHAPTER-8 SOFTWARE TESTING AND COST ESTIMATION -Ela Thakur Software testing is the process of exercising with the specific intent of finding errors prior to delivery to the end user."}{"question": "What is the purpose of integration testing?", "answer": "Test cases are constructed to test that all components within assemblages interact correctly, for example across procedure calls or process activations, and this is done after testing individual modules, i."}{"question": "What is the purpose of integration testing?", "answer": "Testing is part of a broader process of software verification and validation."}{"question": "What is the purpose of integration testing?", "answer": "The purpose of integration testing is to verify functional, performance, and reliability requirements placed on major design items."}{"question": "What is the purpose of integration testing?", "answer": "assemblages (or groups of units), are exercised through their interfaces using Black box testing, success and error cases being simulated via appropriate parameter and data inputs."}{"question": "What is the purpose of integration testing?", "answer": "The system is tested as components are integrated."}{"question": "What is the purpose of integration testing?", "answer": "Simulated usage of shared data areas and inter-process communication is tested and individual subsystems are exercised through their input interface."}{"question": "What is the purpose of integration testing?", "answer": "There are two phases in system testing: a) Integration testing: (IOE Q:Explain Integration testing 067 asadh) In this type of testing the test team has access to the system code."}{"question": "What is the purpose of integration testing?", "answer": "1."}{"question": "What is the purpose of integration testing?", "answer": "Fig: A model of the software testing process 8."}{"question": "What is the purpose of integration testing?", "answer": "unit testing."}{"question": "What is the main purpose of integration testing?", "answer": "Testing results in higher quality software, more satisfied user and lower maintenance cost, more accurate and reliable results."}{"question": "What are the main components of a software test?", "answer": "These \"design items\", i."}{"question": "What is the purpose of integration testing?", "answer": "e."}{"question": "What is the purpose of integration testing?", "answer": "SYSTEM TESTING: System testing fully exercise the computer based system to verify the system elements have been properly integrated and perform allocated functions."}{"question": "What is the difference between Big Bang and Bottom Up?", "answer": "Big Bang In this approach, all or most of the developed modules are coupled together to form a complete software system or major part of the system and then used for integration testing."}{"question": "What types of integration testing are there?", "answer": "Some different types of integration testing are big bang, top-down, and bottom-up."}{"question": "When is the top down approach helpful?", "answer": "This approach is helpful only when all or most of the modules of the same development level are ready."}{"question": "What is the difference between release testing and a black-box testing process?", "answer": "Release testing is usually a black-box testing process where tests are derived from the system specification."}{"question": "What is a defect testing process?", "answer": "It is a defect testing process."}{"question": "What is the difference between top down and bottom up testing?", "answer": "2."}{"question": "What is the difference between top down and bottom up testing?", "answer": "3."}{"question": "What is the difference between a top down and a bottom up approach to integrated testing?", "answer": "All the bottom or low-level modules, procedures or functions are integrated and then tested."}{"question": "What is the main advantage of system testing?", "answer": "System testing by the development team should focus on discovering bugs in the system."}{"question": "What is the difference between top down and bottom up testing?", "answer": "Top-down and Bottom-up Bottom Up Testing is an approach to integrated testing where the lowest level components are tested first, then used to facilitate the testing of higher level components."}{"question": "What is the main advantage of the Bottom-Up approach?", "answer": "The main advantage of the Bottom-Up approach is that bugs are more easily found."}{"question": "What is the difference between component testing and release testing?", "answer": "Component testing should focus on testing component interfaces."}{"question": "What is the difference between top down and bottom up testing?", "answer": "This method also helps to determine the levels of software developed and makes it easier to report testing progress in the form of a percentage."}{"question": "What is the difference between top down and bottom up testing?", "answer": "8."}{"question": "What is the difference between a top down and a bottom up approach?", "answer": "The process is repeated until the component at the top of the hierarchy is tested."}{"question": "What is the difference between a black-box and a release testing?", "answer": "The system is treated as black-box whose behavior."}{"question": "What is the difference between top down and bottom up testing?", "answer": "With Top-Down, it is easier to find a missing branch link b) Release testing: In this type of testing a separate testing team tests a complete version of the system before it is released to users."}{"question": "What is the difference between a composite and a top down approach?", "answer": "COMPONENT TESTING: Several individual units are integrated to create composite components."}{"question": "What is the difference between a test case design and a release testing?", "answer": "TEST CASE DESIGN: Test case design involves designing the text cases (inputs and outputs) used to test the system."}{"question": "What is the goal of test case design?", "answer": "The goal of test case design is to create a set of tests that are effective in validation and defect testing."}{"question": "What is the difference between a top down and a bottom up approach?", "answer": "The components may be: * Individual function or methods within an object * Object classes with several attributes and methods * Composite components with defined interfaces used to access their functionality Tester: developer Individual testing team Fig: Testing Phases 8."}{"question": "What is the difference between top down and bottom up testing?", "answer": "Top Down Testing is an approach to integrated testing where the top integrated modules are tested and the branch of the module is tested step by step until the end of the related module."}{"question": "What is the difference between a top down and a bottom up approach?", "answer": "Another name for this is \u2018functional testing\u2019, so called because the tester is only concerned with functionality and not the implementation of the software."}{"question": "What is the purpose of release testing?", "answer": "The aim of release testing is to check that the system meets the requirements of system stakeholders."}{"question": "What is the difference between integration testing and release testing?", "answer": "After the integration testing of lower level integrated modules, the next level of modules will be formed and can be used for integration testing."}{"question": "What is the main approach to testing?", "answer": "The public (usually) interfaces to classes, modules or libraries are tested with a variety of input arguments to validate that the results that are returned are correct."}{"question": "What is the difference between white-box and st?", "answer": "In white-box testing an internal perspective of the system, as well as programming skills, are used to design test cases."}{"question": "What is the definition of a test automation technique?", "answer": "This technique tries to define test cases that uncover classes of errors, thereby reducing the total number of test cases that must be developed."}{"question": "What is a testing framework?", "answer": "A testing framework generates user interface events such as keystrokes and mouse clicks, and observes the changes that result in the user interface, to validate that the observable behavior of the program is correct."}{"question": "What is the definition of a test automation?", "answer": "Tests Derives Fig: Structural Testing 8."}{"question": "What is the definition of a test automation?", "answer": "5."}{"question": "What is the main focus of the metric for testing?", "answer": "METRICS FOR TESTING: Majority of metric for testing proposed focus on the process of testing,not the technical characteristics of the test themselves."}{"question": "What are the most common metric used in testing?", "answer": "* Halstead metrics applied to testing: Testing effort can be estimated using metrics derived from Halstead measures."}{"question": "What is the definition of test automation?", "answer": "TEST AUTOMATION: In software testing, test automation is the use of special software (separate from the software being tested) to control the execution of tests and the comparison of actual outcomes to predicted outcomes."}{"question": "What is the difference between a test automation and a test automation?", "answer": "It reduces testing costs by supporting the test process with range of software tools."}{"question": "What is the definition of a test automation?", "answer": "* Design approaches: * Requirement-based testing: Used in validation testing technique where we consider each requirement and tests for that requirement."}{"question": "What is the definition of a test automation?", "answer": "8."}{"question": "What is the most common approach to testing?", "answer": "* Graphical user interface testing."}{"question": "What is a test automation technique?", "answer": "* Structural Testing(White-Box Testing): It is a method of testing software that tests internal structures or workings of an application, as opposed to its functionality (i."}{"question": "What is the definition of test automation?", "answer": "Test automation can automate previous repetitive but necessary testing in a formalized testing process already in place, or add additional testing that would be difficult to perform manually."}{"question": "What are the two general approaches to testing automation?", "answer": "There are two general approaches to test automation: * Code-driven testing."}{"question": "What is a test automation technique?", "answer": "black-box testing)."}{"question": "What is the most common approach to testing?", "answer": "System such as \u2018Junit\u2019 supports the automatic execution of tests."}{"question": "What is the definition of a test automation?", "answer": "e."}{"question": "What is a partition testing technique?", "answer": "* Partition Testing: It is a software testing technique that divides the input data of a software unit into partitions of equivalent data from which test cases can be derived."}{"question": "What is the difference between a test and a design approach?", "answer": "The tester chooses inputs to exercise paths through the code and determine the appropriate outputs."}{"question": "What is the definition of a test automation?", "answer": "4."}{"question": "What is the function point in a program?", "answer": "External inputs and outputs B."}{"question": "Who is unknown in the project?", "answer": "People in the project may be unknown."}{"question": "what is the sum of effort across all modules of the system?", "answer": "e(i) where; e(K) is computed for module K And;?"}{"question": "what is the cost of a software project?", "answer": "The estimate defines the budget and the product is adjusted to meet the budget."}{"question": "What is the number of user interactions in a program?", "answer": "User interactions C."}{"question": "what is a pl?", "answer": "PL=1/ [(n1/2)*(N2/n2)] e=V/ PL Where; PL is program level e is Halstead effort V is program volume n1 is no."}{"question": "What is the difference between the cost of a project and the cost of a project?", "answer": "Project cost estimates may be self-fulfilling."}{"question": "What is the number of interfaces used by the system?", "answer": "External interfaces D."}{"question": "what is the number of distinct operands in a program?", "answer": "of distinct operands that appears in a program N2 is the total no."}{"question": "What is the difference between the two measures of software productivity?", "answer": "There are two measures of software productivity: I."}{"question": "What is the number of files used by the system?", "answer": "Files used by the system II."}{"question": "what is the function point in a program?", "answer": "Function point in a program is computed by measuring program features:- A."}{"question": "what is the number of pages of system documentation?", "answer": "Size: * Line of code delivered * Also measure no."}{"question": "what is the number of distinct operations that appears in a program?", "answer": "of operand occurrence The percentage of overall testing effort to be allocated to a module \u2018K\u2019 can be estimated as: K=e(K)/?"}{"question": "What is the percentage of effort to be allocated to a module?", "answer": "7."}{"question": "What is the no. of distinct operations that appears in a program?", "answer": "of distinct operations that appears in program n2 is the no."}{"question": "What is the percentage of effort to be allocated to a module?", "answer": "6."}{"question": "how many lines of code is delivered?", "answer": "of pages of system documentation * Useful for programming in FORTRAN, Assembly or COBOL * More expressive the programming language, the lower apparent productivity Example: A system which might be coded in 5000 lines of assembly code."}{"question": "What is the definition of productivity?", "answer": "Function-related measures: Productivity is expressed in terms of the amount of useful functionality produced in some given time."}{"question": "how many lines/ month?", "answer": "The development time for the various phases in 28 weeks, Then; productivity= (5000/28) *4 =714 lines/ month 8."}{"question": "What is the value of the initial estimate?", "answer": "Initial estimates are based on inadequate information in a user requirement definition."}{"question": "what is the ratio between the amount of software produced to the labor and expense of producing it?", "answer": "SOFTWARE PRODUCTIVITY: Software productivity is the ratio between the amount of software produced to the labor and expense of producing it."}{"question": "what is the e of halstead?", "answer": "ESTIMATION TECHNIQUES There is no simple way to make an accurate estimate of the effort required to develop a software system."}{"question": "What is the number of pages of system documentation?", "answer": "of delivered object code instruction or no."}{"question": "what is the sum of effort across all modules of the system?", "answer": "e(i) is the sum of effort across all modules of the system 8."}{"question": "what is the %reuse of the application point in the delivered system?", "answer": "Formula for effort computation for system prototype: PM= [NAP*(1 - %reuse/100)] / [PROD] Where; PM is effort estimation in person-motion NAP is the total no."}{"question": "How can I calculate the time required for a project?", "answer": "Staff required cannot be computed by dividing the development time by the required schedule."}{"question": "what is the cost of a project?", "answer": "Effort = A* sizeB*M Where; A is an organization-dependent constant B reflects the disproportionate effort for large project M is a multiplier reflecting product, process and people attributes * COCOMO MODEL(CONSTRUCTIVE COST MODEDL): This is an empirical model that was derived by collecting data from a large number of software projects."}{"question": "What is the simplest formula for cost estimation?", "answer": "9."}{"question": "What is the difference between a project and a staff?", "answer": "PROJECT DURATION AND STAFFING: As well as effort estimation, managers must estimate the calendar time required in completing a project and the staff required."}{"question": "What is the difference between the two?", "answer": "The number of people working in a project varies depending on the phase of the project."}{"question": "What is the definition of regression testing?", "answer": "* IOE QUESTIONS: * What is regression testing?"}{"question": "how many people are required to complete a project?", "answer": "Calendar time estimation (COCOMO) TDEV = 3*(PM)  [(0."}{"question": "what is the cost of a project?", "answer": "ALGORITHM COST MODELLING Cost is estimated as a mathematical function of product, project and process attributes whose values are estimated by project manager."}{"question": "What is the simplest formula for cost estimation?", "answer": "2)*(B \u2013 1."}{"question": "How many people are required to complete a project?", "answer": "33+0."}{"question": "What is the cost of a project?", "answer": "01)] Where; PM is the effort computation B is the exponent computed (B is 1 for the early prototyping mode) Time required is independent of the number of people working in the project."}{"question": "How many times does the cost of a project change?", "answer": "25x 1: Feasibility 2: Requirement Design 3: Code 4: Delivery Fig: Estimation Uncertainty 8."}{"question": "What is the best way to estimate the cost of a project?", "answer": "We can always run regression tests to check the changes to the program have not introduced new bugs."}{"question": "What is the definition of a cost model?", "answer": "This is a well-documented and non-proprietary estimation model."}{"question": "What is the simplest formula for cost estimation?", "answer": "8."}{"question": "how many times does pm estimate the effort of a project?", "answer": "15x 0."}{"question": "What is the definition of a regression test suite?", "answer": "> A test suite is developed incrementally as a program is developed."}{"question": "What is the cost of a project?", "answer": "* Parkinson\u2019s law * Pricing to win 4x 2x 1 2 3 4 5 0."}{"question": "What is the value of the effort in the delivered system?", "answer": "of application points in the delivered system %reuse is an estimation of the amount of reused code in the development PROD is the application-point productivity 8."}{"question": "What is the purpose of regression testing?", "answer": "One of the main reasons for regression testing is to determine whether a change in one part of the software affects other parts of the software."}{"question": "What is the purpose of testing a software?", "answer": "4) Testing starts from requirements gathering, In other words early testing reduces the amount of money, rework involved etc."}{"question": "What are the basic principles of software testing?", "answer": "* What are the basic principles of software testing?"}{"question": "What is the purpose of regression testing?", "answer": "Example A software may not have any reported defects (all defects identified are fixed) but still it may fail in the production environment."}{"question": "What is the purpose of testing a software?", "answer": "It is impossible for us to test each and every notice that is being generated to each customer."}{"question": "What is the purpose of testing a software?", "answer": "3) Testing a software is to find out the defects - not to prove that the software is error free."}{"question": "What are the basic principles of software testing?", "answer": "List the characteristics of testability of software."}{"question": "What are the basic principles of software testing?", "answer": "List out possible errors of black-box testing."}{"question": "What is the purpose of regression testing?", "answer": "Regression testing can be used to test a system efficiently by systematically selecting the appropriate minimum set of tests needed to adequately cover a particular change."}{"question": "What is the purpose of regression testing?", "answer": "But an application built for storing the addresses in a Personal computer need not be tested rigorous similar to the previous application."}{"question": "What is the purpose of regression testing?", "answer": "Only way to perform is to identify a suitable sample for it."}{"question": "What are the basic principles of software testing?", "answer": "> The basic principles of software testing are: 1) Testing an application exhaustively is impossible Example Assume that we have been given an application which produces bank statements that are sent to the customers."}{"question": "Why is testing done to prove that the software is error free?", "answer": "Testing is not done to prove that the software is error free."}{"question": "What is the purpose of regression testing?", "answer": "The earlier we identify and fix defects, the greater the money is saved."}{"question": "What is the purpose of regression testing?", "answer": "For instance, in the design of a compiler, regression testing could track the code size, simulation time and compilation time of the test suite cases."}{"question": "When should testing be started?", "answer": "Testing must be started as early as the Testing life cycle begins."}{"question": "What is the purpose of regression testing?", "answer": "Example: An application built to be used inside an aircraft, requires rigorous testing and subject it to high quality standards."}{"question": "What are the main principles of software testing?", "answer": "Common methods of regression testing include rerunning previously-completed tests and checking whether program behavior has changed and whether previously-fixed faults have re-emerged."}{"question": "What is the purpose of regression testing?", "answer": "The intent of regression testing is to ensure that a change has not introduced new faults."}{"question": "What is the purpose of testing a software?", "answer": "2) Testing is context based - Software testing is always based on the purpose to which the software built will be used."}{"question": "What is the purpose of regression testing?", "answer": "Regression testing can be used not only for testing the correctness of a program, but often also for tracking the quality of its output."}{"question": "What is the main objective of testing a software?", "answer": "The main objective of testing a software is to find out as many defects as possible."}{"question": "What are the main points of the article?", "answer": "Comment on this statement and explain various testing techniques."}{"question": "What does the term \"test\" mean?", "answer": "Executing same set of test cases will not identify the defects present in the software."}{"question": "What does absence of errors mean?", "answer": "7) Absence of errors in an application does not mean that, the application is free from defects."}{"question": "What is the main idea of testing?", "answer": "The overall idea is a \"building block\" approach, in which verified assemblages are added to a verified base which is then used to support the integration testing of further assemblages."}{"question": "What is the definition of testing?", "answer": "> Software testing is the process of exercising with the specific intent of finding errors prior to delivery to the end user."}{"question": "How much does testing cost?", "answer": "Testing costs 1/3 to 12 of the total cost of software development process."}{"question": "What is the role of an independent testing team?", "answer": "An independent testing team is responsible for system testing."}{"question": "What is the purpose of testing?", "answer": "The tests are based on system specification."}{"question": "What is the purpose of testing?", "answer": "Test cases are constructed to test that all components within assemblages interact correctly, for example across procedure calls or process activations, and this is done after testing individual modules, i."}{"question": "What is the purpose of testing?", "answer": "Testing is part of a broader process of software verification and validation."}{"question": "What is the purpose of integration testing?", "answer": "The purpose of integration testing is to verify functional, performance, and reliability requirements placed on major design items."}{"question": "What is the purpose of testing?", "answer": "assemblages (or groups of units), are exercised through their interfaces using Black box testing, success and error cases being simulated via appropriate parameter and data inputs."}{"question": "What is the importance of testing in software development?", "answer": "Hence testing is the very important core parts of software development and implementation."}{"question": "What is the purpose of integration testing?", "answer": "The system is tested as components are integrated."}{"question": "What does the same type of testing do?", "answer": "6) Performing the similar kind of testing again and again does not identify the defects."}{"question": "What is the purpose of testing?", "answer": "Simulated usage of shared data areas and inter-process communication is tested and individual subsystems are exercised through their input interface."}{"question": "What is the purpose of integration testing?", "answer": "There are two phases in system testing: - Integration testing: In this type of testing the test team has access to the system code."}{"question": "What is the purpose of testing?", "answer": "unit testing."}{"question": "What is the difference between the two types of testing?", "answer": "5) The number of Defects in an application seems to come from one or few areas or modules of the application and not spread evenly."}{"question": "What is the difference between a module and a test case?", "answer": "Example: The module was prepared by new programmer The complexity of that particular module is very high etc."}{"question": "What are the benefits of testing?", "answer": "Testing results in higher quality software, more satisfied user and lower maintenance cost, more accurate and reliable results."}{"question": "What are the characteristics of testing of software?", "answer": "The characteristics of testability of software are: - Operability - Observability - Controllability - Decomposability - Simplicity - Stability - Understandability Possible errors of Black-box testing are: o Only a small number of possible inputs can be tested and many program paths will be left untested o Without clear specifications, which is the situation in many projects, test cases will be difficult to design o Tests can be redundant if the software designer/ developer has already run a test case * Testing is one of the very important core parts of software development and implementation."}{"question": "What are the main types of testing techniques?", "answer": "Various testing techniques are: A."}{"question": "What are the main components of a software application?", "answer": "These \"design items\", i."}{"question": "What are the characteristics of testing?", "answer": "e."}{"question": "What is the purpose of system testing?", "answer": "SYSTEM TESTING: System testing fully exercise the computer based system to verify the system elements have been properly integrated and perform allocated functions."}{"question": "What is the definition of a test case?", "answer": "."}{"question": "What are the different types of integration testing?", "answer": "However, if the test cases and their results are not recorded properly, the entire integration process will be more complicated and may prevent the testing team from achieving the goal of integration testing."}{"question": "When is the integration testing best done?", "answer": "This approach is helpful only when all or most of the modules of the same development level are ready."}{"question": "What is the difference between release testing and black-box testing?", "answer": "Release testing is usually a black-box testing process where tests are derived from the system specification."}{"question": "What is a defect testing process?", "answer": "It is a defect testing process."}{"question": "What is the best way to test a system?", "answer": "The Big Bang method is very effective for saving time in the integration testing process."}{"question": "What type of integration testing is used?", "answer": "All the bottom or low-level modules, procedures or functions are integrated and then tested."}{"question": "What type of integration testing is used for?", "answer": "B."}{"question": "What is the main advantage of system testing?", "answer": "System testing by the development team should focus on discovering bugs in the system."}{"question": "What is the difference between top down and bottom up testing?", "answer": "Top-down and Bottom-up Bottom Up Testing is an approach to integrated testing where the lowest level components are tested first, then used to facilitate the testing of higher level components."}{"question": "What is the main advantage of the bottom up approach?", "answer": "The main advantage of the Bottom-Up approach is that bugs are more easily found."}{"question": "What is the main purpose of component testing?", "answer": "Component testing should focus on testing component interfaces."}{"question": "What is the difference between the three types of integration testing?", "answer": "This method also helps to determine the levels of software developed and makes it easier to report testing progress in the form of a percentage."}{"question": "What is the difference between the three types of integration testing?", "answer": "The process is repeated until the component at the top of the hierarchy is tested."}{"question": "What is the difference between a black-box and a release testing?", "answer": "The system is treated as black-box whose behavior."}{"question": "What is the difference between a big bang and a bottom up approach?", "answer": "COMPONENT TESTING: Several individual units are integrated to create composite components."}{"question": "What is the difference between top down and bottom up testing?", "answer": "Top Down Testing is an approach to integrated testing where the top integrated modules are tested and the branch of the module is tested step by step until the end of the related module."}{"question": "What is the name of the integration testing method?", "answer": "Another name for this is \u2018functional testing\u2019, so called because the tester is only concerned with functionality and not the implementation of the software."}{"question": "What is the purpose of release testing?", "answer": "The aim of release testing is to check that the system meets the requirements of system stakeholders."}{"question": "What type of integration testing is used after the integration testing of lower level integrated modules?", "answer": "After the integration testing of lower level integrated modules, the next level of modules will be formed and can be used for integration testing."}{"question": "What is the difference between top down and bottom up testing?", "answer": "With Top-Down, it is easier to find a missing branch link - Release testing: In this type of testing a separate testing team tests a complete version of the system before it is released to users."}{"question": "What type of integration testing is used?", "answer": "Big Bang In this approach, all or most of the developed modules are coupled together to form a complete software system or major part of the system and then used for integration testing."}{"question": "What types of integration testing are there?", "answer": "Some different types of integration testing are big bang, top-down, and bottom-up."}{"question": "What is the reason why a software project fails after it has passed acceptance testing?", "answer": "* Why does software project fail after it has passed through acceptance testing?"}{"question": "What is the definition of the program output?", "answer": "The program output may have one of the following words."}{"question": "What is the nature of roots of a quadratic equation?", "answer": "[Not a quadratic equation; Real root, Imaginary roots, Equal roots]."}{"question": "What is the best way to test a program?", "answer": "- You might have to develop custom adapters at an early stage."}{"question": "What are the problems encountered when top down integration is chosen?", "answer": "> The problems encountered are: - The solution provides limited coverage in the first phases."}{"question": "What is the cost of implementing a top down integration?", "answer": "- The implementation cost is likely to be higher."}{"question": "What are the problems encountered when a software project fails after it has passed acceptance testing?", "answer": "- A minimal percentage of user accounts are managed in the first phases."}{"question": "What are the main reasons for the failure of a software project?", "answer": "- The support and overall business will not realize the benefit of the solution as rapidly."}{"question": "What is the input of a quadratic equation?", "answer": "Its input is a triple of positive integers (say a, b, c) and values may be from interval [0, 100]."}{"question": "What is the purpose of this article?", "answer": "Design test cases to test this program."}{"question": "What are the problems that may occur when top down integration is chosen?", "answer": "* Individual function or methods within an object * Object classes with several attributes and methods * Composite components with defined interfaces used to access their functionality Tester: developer Individual testing team Fig: Testing Phases * What problems may be encountered when top down integration is chosen?"}{"question": "What are the reasons for the failure of a program?", "answer": "> The reasons are: - Poor user input - Stakeholder conflicts - Vague requirements - Late failure warning signals - Communication breakdowns - Hidden costs of going \u201cLean And Mean\u201d - Consider a program for the determination of the nature of roots of a quadratic equation."}