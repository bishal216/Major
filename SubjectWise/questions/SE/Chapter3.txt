{"question": "What is the definition of architectural design?", "answer": "Is there generic application architecture that can act as a template for the system that is being designed?"}{"question": "What is the difference between distributed and a single processor?", "answer": "However, most large systems are now distributed systems in which the system software is distributed across many different computers."}{"question": "Why should the architectural style and structure that you choose for a system depend on the nonfunctional?", "answer": "Because of the close relationship between nonfunctional requirements and software architecture, the particular architectural style and structure that you choose for a system should depend on the nonfunctional system requirements: 1."}{"question": "What is the purpose of the article?", "answer": "How should the architecture of the system be documented?"}{"question": "What is the purpose of the architectural design?", "answer": "How will the architectural design be evaluated?"}{"question": "What are the fundamental questions that system architects have to consider?", "answer": "Based on their knowledge and experience, they have to consider the following fundamental questions about the system: 1."}{"question": "What is the definition of architectural design?", "answer": "1 Architectural design decisions: Architectural design is a creative process where you design a system organization that will satisfy the functional and non-functional requirements of a system."}{"question": "Why is architectural design a creative process?", "answer": "Because it is a creative process the activities within the process depend on the type of system being developed, the background and experience of the system architect, and the specific requirements for the system."}{"question": "What is the definition of architectural design?", "answer": "3."}{"question": "What is the difference between a distributed architecture and an embedded system?", "answer": "For embedded systems and systems designed for personal computers, there is usually only a single processor and you will not have to design a distributed architecture for the system."}{"question": "What is the definition of architectural design?", "answer": "2."}{"question": "What is the definition of architectural design?", "answer": "4."}{"question": "What is the output of the architectural design process?", "answer": "The output of the architectural design process is an architectural model that describes how the system is organized as a set of communicating components."}{"question": "What are the main components of the system?", "answer": "During the architectural design process, system architects have to make a number of structural decisions that profoundly affect the system and its development process."}{"question": "What is the key decision that affects the performance and reliability of the system?", "answer": "The choice of distribution architecture is a key decision that affects the performance and reliability of the system."}{"question": "What is the meaning of architectural design?", "answer": "It is therefore useful to think of architectural design as a series of decisions to be made rather than a sequence of activities."}{"question": "What is the best architectural organization for delivering the non-functional requirement of the system?", "answer": "What architectural organization is best for delivering the non-functional requirement of the system?"}{"question": "What is the definition of architectural design?", "answer": "In the model of the software development process, architectural design is the first stage in the software design process."}{"question": "What is the key link between design and requirement engineering?", "answer": "It is the critical link between design and requirement engineering, as it identifies the main structural components in a system and the relationships between them."}{"question": "What is the definition of architectural design?", "answer": "5."}{"question": "What is the meaning of architectural design?", "answer": "Chapter -3 Architectural design: -Sunil Lama Architectural design is concerned with understanding how a system should be organized and designing the overall structure of that system."}{"question": "What is the definition of architecture?", "answer": "Performance: If performance is a critical requirement, the architecture should be designed to localize critical operations within a small number of components, with these components all deployed on the same computer rather than distributed across the network."}{"question": "What is the purpose of the architectural design?", "answer": "What strategy will be used to control the operation of the components in the system?"}{"question": "What is the difference between the two?", "answer": "Although each software system is unique, systems in the same application domain often have similar architectures that reflect the fundamental concepts of the domain."}{"question": "What is the most common reason for the failure of a system?", "answer": "Inevitably a compromise."}{"question": "What is the most common way to share large amounts of data?", "answer": "Sharing model is published as the repository schema."}{"question": "What is the main idea of the repository model?", "answer": "Producers of data should be separated from consumers and shared data structures should be avoided."}{"question": "What are the advantages of a shared data repository?", "answer": "Repository model characteristics: * Advantages: 1."}{"question": "What is the cost of data evolution?", "answer": "Data evolution is difficult and expensive."}{"question": "What is the most common organizational style used in the repository?", "answer": "3."}{"question": "What is the most common type of repository?", "answer": "Efficient way to share large amount of data."}{"question": "What is the most common type of repository?", "answer": "2."}{"question": "What is the most common type of repository?", "answer": "4."}{"question": "What is the scope for?", "answer": "No scope for specific management policies, 4."}{"question": "What is the most common way to share large amounts of data?", "answer": "Each sub-system maintains its own database and passes data explicitly to other sub-systems."}{"question": "What is the most important requirement for a repository?", "answer": "Security: If security is critical requirement, a layered structure for the architecture should be used, with the most critical assets protected in the innermost layers, with a high level of security validation applied to these layers."}{"question": "What is the most common type of repository?", "answer": "An abstract machine or layered style."}{"question": "What are the most common organizational styles used?", "answer": "* Three organizational styles are widely used: 1."}{"question": "What is the most common way to share data?", "answer": "Shared data is held in a central database or repository and may be accessed by all sub-systems, 2."}{"question": "What is the most common problem with the repository model?", "answer": "Difficult to distribute efficiently."}{"question": "What is the most important requirement of a system architecture?", "answer": "Maintainability: If maintainability is a critical requirement, the system architecture should be designed using fine-grain, self-contained components that may readily be changed."}{"question": "What is the most common organizational style used in the system?", "answer": "A shared data repository style, 2."}{"question": "What is the most important requirement of a system?", "answer": "Safety: If safety is the critical requirement, the architecture should be designed so that safety related operations are all located in either a single component or in a small number of components."}{"question": "What is the most common use of the repository model?", "answer": "* When large amounts of data are to be shared, the repository model of sharing is most commonly used."}{"question": "What is the most common way to share large amounts of data?", "answer": "Sub-systems need not be concerned with how data is produced centralized management e."}{"question": "What is the most common type of repository?", "answer": "g."}{"question": "What is the most common type of repository?", "answer": "5."}{"question": "What is the basic strategy used to structure a system?", "answer": "2 System organization: * Reflects the basic strategy that is used to structure a system."}{"question": "What is the most common way to share data?", "answer": "This may be done in two ways: 1."}{"question": "What is the most important requirement of a system?", "answer": "Availability: If availability is a critical requirement, the architecture should be designed to include redundant components so that it is possible to replace and update components without stopping the system."}{"question": "What are the advantages of a shared data repository?", "answer": "* Disadvantages 1."}{"question": "What is the most common way to share large amounts of data?", "answer": "Sub-systems must agree on a repository data model."}{"question": "What is the most common requirement for a shared data repository?", "answer": "backup, security etc."}{"question": "What style is widely used for a shared data repository?", "answer": "A shared services and servers style, 3."}{"question": "What is the most important aspect of the repository model?", "answer": "This reduces the costs and problems of safety validation and makes it possible to provide related protection systems that can safely shut down the system in the event of failure."}{"question": "What is the most common way to share large amounts of data?", "answer": "The repository model * Sub-systems must exchange data."}{"question": "What is the difference between a system organization and a module?", "answer": "Applicable to concurrent systems."}{"question": "What are the main event driven models?", "answer": "* Two principal event \u2013 driven models 1."}{"question": "What is the difference between system organization and modular decomposition?", "answer": "* No rigid distinction between system organization and modular decomposition."}{"question": "What is the difference between a sub-system and a module?", "answer": "Each sub-system can respond to externally generated events from other sub-systems or the system\u2019s environment."}{"question": "What is the difference between a system organization and a module?", "answer": "Interrupt- driven models: Used in real-time systems where interrupts are detected by an interrupt handler and passed to some other component for processing."}{"question": "What is a modular decomposition model?", "answer": "An object model where the system is decomposed into interacting objects, II."}{"question": "What is the difference between a sub-system and a module?", "answer": "Sub-systems and modules * A sub-system is a system in its own right whose operation is independent of the services provided by other sub-systems."}{"question": "What is the difference between a case statement and a modular decomposition?", "answer": "Can be implemented in sequential systems as a case statement."}{"question": "What is the difference between a top-down and a bottom-down subroutine?", "answer": "Top-down subroutine model where control starts at the top of a subroutine hierarchy and moves downwards."}{"question": "What is the difference between a system organization and a module?", "answer": "3."}{"question": "What is the difference between a control sub-system and a control sub-system?", "answer": "Centralized control: * A control sub-system takes responsibility for managing the execution of other sub-systems."}{"question": "What is the difference between a system organization and a module?", "answer": "One sub-system has overall responsibility for control and starts and stops other sub-systems."}{"question": "What is the difference between a system component and a sub-system?", "answer": "One system component controls the stopping, starting and coordination of other system processes."}{"question": "What is the difference between a sub-system and a module?", "answer": "* Manager model: 1."}{"question": "What is the difference between a system organization and a module?", "answer": "* If possible, decisions about concurrency should be delayed until modules are implemented."}{"question": "What is the difference between a system organization and a module?", "answer": "2."}{"question": "What is a module?", "answer": "* A module is a system component that provides services to other components but would not normally be considered as a separate system."}{"question": "What is the difference between a top-down subroutine model and a call-?", "answer": "* Call-return model: 1."}{"question": "What is the difference between a sequential and a modular system?", "answer": "Applicable to sequential systems."}{"question": "What is the difference between a sub-system and a module?", "answer": "* Styles of decomposing sub-systems into modules."}{"question": "What is the difference between broadcast and module?", "answer": "Broadcast models: An event is broadcast to all sub-systems."}{"question": "What is the difference between the two?", "answer": "Distinct from the system decomposition model."}{"question": "What is the difference between a centralized control and a system decomposition model?", "answer": "* Event-based control 1."}{"question": "What is the difference between a pipeline and a data flow model?", "answer": "A pipeline or data-flow model where the systems is decomposed into functional modules which transform inputs to outputs."}{"question": "What are the different types of control?", "answer": "4 Control styles * Are concerned with the control flow between sub-systems."}{"question": "What is the difference between a broadcast and a module?", "answer": "Any sub-system which can handle the event may do so."}{"question": "What is the difference between a system organization and a module?", "answer": "Modular decomposition * Another structural level where sub-systems are decomposed into modules."}{"question": "What is the difference between a system organization and a module?", "answer": "* Centralized control 1."}{"question": "What is the difference between a system and a subsystem?", "answer": "Event \u2013 driven systems: * Driven by externally generated events where the timing of the event is out with the control of the sub-systems which process the event."}{"question": "What are the two types of decomposition?", "answer": "* Two modular decomposition models covered I."}{"question": "What are the two types of architectures?", "answer": "* Client and server are logical processors in client-server architecture."}{"question": "What is the simplest distributed system model?", "answer": "6 Multiprocessor architecture: Traffic flow traffic light control Sensor processor processor processor Operator console Fig: Simple multiprocessor architecture for traffic light system It is the simplest distributed system model."}{"question": "What is the architecture used for?", "answer": "7 Client \u2013 server architecture: * This architectural model is used for the set of services that are provided by server and a set of clients that use this service."}{"question": "What is the purpose of a reference architecture?", "answer": "5 Reference Architecture: Reference architecture captures important features of system architectures in a domain."}{"question": "What is the purpose of reference architectures?", "answer": "The main purpose of reference architectures is to evaluate and compare design proposal, and educate people about architectural characteristics in that domain."}{"question": "What is the purpose of the architecture?", "answer": "3."}{"question": "What is the most common type of architecture?", "answer": "The system is composed of multiple processor processes which may execute on different processor."}{"question": "What is the difference between client and server architecture?", "answer": "* Mapping of processor to process is not necessarily 1:1 in case of client-server architecture."}{"question": "What is the best name for the term?", "answer": "Generic model 2."}{"question": "What is the most common domain of application architecture?", "answer": "* Architectural models may be applicable to some application domain: 1."}{"question": "What is the difference between client and server architecture?", "answer": "* Client should know about the server but the server need not know about clients in client-server architecture."}{"question": "What is the difference between the two?", "answer": "Reference model (Generic are bottom-top model whereas reference models follow top-down approach."}{"question": "What is the definition of a reference architecture?", "answer": "OSI reference model is a layered model of communication system Application Presentation Session Transport Network Data link physical Application Presentation Session Transport Network Data link Physical Communication channel Fig: OSI reference model 3."}{"question": "What is the architecture of a real time system?", "answer": "In this architecture, distribution of process to processor may be preordered or may be under the control of the dispatcher."}{"question": "What is the architecture of a real time system?", "answer": "It is Architectural model of many large real time systems."}{"question": "What are other types of models?", "answer": "* Other event driven models include spreadsheets and production systems."}{"question": "What is the main purpose of reference architectures?", "answer": "Essentially, they include everything that might be in application architecture although, in reality, it is very unlikely that any individual application would include all the features shown in a reference architecture."}{"question": "What is the purpose of a reference architecture?", "answer": "* It acts as a standard against which system can be evaluated."}{"question": "What is the purpose of a reference architecture?", "answer": ") * Reference models are derived from study of application domain rather than from existing system- maybe used as a basic system implementation or to compare different system."}{"question": "What is the difference between a distributed entity and a service object?", "answer": "Features: * No distinction * Each distributed entity is objects that provide service other object and receive from other objects."}{"question": "What is the difference between a distributed computing and a client server?", "answer": "* Newer model of distributed computing have been designed to support inter-organizational computing where different node server are located at different organization."}{"question": "What is the purpose of the data management layer?", "answer": "* Data management layer concerned with managing the system."}{"question": "What is the difference between a client and a server?", "answer": "* However, more complexes to design the client server architecture."}{"question": "What is the difference between a distributed object and a client server?", "answer": "3."}{"question": "What is the difference between a distributed object and a client server?", "answer": "* System is flexible and scalable."}{"question": "What is the purpose of distributed computing?", "answer": "9 Inter-organizational distributed computing Features: * Used for security and interoperability reason."}{"question": "What is the purpose of the application layer?", "answer": "* Application layer is concerned with providing application specific functionality."}{"question": "What are the advantages of inter-organizational distributed computing?", "answer": "* Local standards management and operational processes apply for such inter-organizational distributed computing."}{"question": "What are the advantages of a distributed object architecture?", "answer": "Advantages: * It allows system designer to delay decision on where and how services should be provided."}{"question": "What is the difference between a middleware system and a software bus?", "answer": "* Object communication is through middleware system called an object request booker or software bus."}{"question": "What is the definition of distributed object architecture?", "answer": "8 Distributed object architecture: O1 S(01) O2 S(o2) O3 S(o3) O5 S(o5) O4 S(04) Fig: Distributed object architecture."}{"question": "What is the difference between a distributed object and a client server?", "answer": "* It is very open system architecture that allows to new resources to be as required."}{"question": "What is the purpose of the presentation layer?", "answer": "* Presentation layer is concerned with presenting the result of a computation to system users and with collecting user inputs."}