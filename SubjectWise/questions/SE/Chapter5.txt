{"question": "What is the best way to reuse a program?", "answer": "* Accelerated development- Embed standards in reusable components."}{"question": "What is the definition of a reuse?", "answer": "Component reuse * Components of an application from sub- systems to single objects may be reused."}{"question": "What is the meaning of a pattern?", "answer": "Pattern element > Name * A meaningful pattern identifier > Problem Description > Solution * Not a concrete design but a template for a design solution that can be installed in different ways."}{"question": "What is the definition of a design pattern?", "answer": "* It should be sufficiently abstract to be reused in different settings."}{"question": "What is the best way to reuse components?", "answer": "* Effective use of specialists- Reuse components instead of people 5."}{"question": "What is the definition of a reuse?", "answer": "Object and function reuse * Software Components that implement a single well-defined object or function may be reused."}{"question": "What is the definition of a design pattern?", "answer": "Design Patterns 2."}{"question": "What is the approach to concept reuse?", "answer": "* Approach to concept reuse is 1."}{"question": "What is the best way to reuse a program?", "answer": "3."}{"question": "What is the definition of a reuse?", "answer": "* The whole of an application system may be reused either by incorporating it without change into other system(COTS reuse) or by developing application families."}{"question": "What is the best way to reuse a system?", "answer": "* Standard compliance- Embed standards in reusable components."}{"question": "What is the definition of a design pattern?", "answer": "2 Design Pattern * Way of reusing abstract knowledge about a problem and its solution."}{"question": "What are the advantages of reusing components?", "answer": "Advantages * Increased reliability- components exercised in working system * Reduced process risk- Reuse components instead of people."}{"question": "What is the definition of a reuse?", "answer": "* Reuse is possible at a range of levels from simple functions to complete application systems."}{"question": "What is the definition of a design pattern?", "answer": "2."}{"question": "What is the definition of a reuse?", "answer": "* Covers the range of possible reuse technologies Fig: Reuse Language Concept Reuse * When we reuse program, we have to follow the design decision made by the original developer of the program * This may limit the opportunities for reuse * However, more abstract form of reuse is concept reuse when a particular approach is described in an implementation independent way and an implementation is then developed."}{"question": "What is a pattern?", "answer": "* A pattern is a description of the problem and the essence of its solution."}{"question": "What is the definition of a reuse?", "answer": "Application system reuse."}{"question": "What is the best way to reuse a program?", "answer": "Generative Programming 5."}{"question": "What are the main characteristics of a pattern?", "answer": "* Pattern often rely on object characteristics such as inheritance and polymorphism."}{"question": "What is the purpose of reusing a system?", "answer": "* To achieve better s/w, more quickly at lower cost Reuse- based Software Engineering 1."}{"question": "What is the definition of a reuse?", "answer": "5 Software Reuse -Anuj joshi * Systems are designed by composing existing components."}{"question": "What is the definition of a reuse landscape?", "answer": "1 Reuse landscape * Although reuse is often simply thought of as the reuse of the reuse of system components, there are many different approaches to reuse that may be used."}{"question": "What is the difference between a generator and a program generator?", "answer": "Reuse through program generation 5."}{"question": "What is the difference between a generator and a program generator?", "answer": "* Allows for multiple presentations of an object and separate interactions with these presentations."}{"question": "What are the main differences between the two approaches?", "answer": "* Frameworks are moderately large entities than can be reuse."}{"question": "What are the main types of program generators?", "answer": "Code generators in CASE tools."}{"question": "What is the difference between a generator and a program generator?", "answer": "5."}{"question": "What are the main components of a generator?", "answer": "3 Generator- based reuse > Program generators involve the reuse of standard program and algorithms."}{"question": "What are the main components of a framework?", "answer": "Framework classes 1."}{"question": "What are the main components of a generator?", "answer": "Enterprise application * Standards and classes that support component communications and information exchange."}{"question": "What is the difference between generator- based and component- based reuse?", "answer": "* Generator- based reuse is very cost-effective but its applicability is limited to a Relatively small number of application domains."}{"question": "What are the main components of a system?", "answer": "System infrastructure framework * Support the development of system infrastructures such as communications, user interface and compilers."}{"question": "What are the types of program generators?", "answer": "Types of program generator * Types of program generator 1."}{"question": "What is the difference between a generator and a program generator?", "answer": "3."}{"question": "What is the difference between a middleware and an enterprise application?", "answer": "Middleware integration framework 3."}{"question": "What is the definition of a generator- based reuse?", "answer": "5 Application system reuse > Involves the reuse of entire application system either by configuring a system for an environment or by integrating two or more system to create a new application."}{"question": "What is the difference between a generic and a generic program generator?", "answer": "> A domain specific language is used to compose and control these abstractions."}{"question": "What is the difference between a generator and a component?", "answer": "* MVC framework involves the instantiation of a number of patterns."}{"question": "What is the best known framework for a GUI design?", "answer": "MVC (Model- View Condition) * One of the best known used frameworks for GUI design."}{"question": "What is the difference between a generator and a program generator?", "answer": "2."}{"question": "What are the main types of program generators?", "answer": "Parser and lexical analyser generator for language processing."}{"question": "What is the difference between generator and other based approaches to reuse?", "answer": "* It is easier for end-users to develop programs using generators compared to other Component- based approaches to reuse."}{"question": "What is the difference between a generator and an executable code?", "answer": "> Generator-based reuse is possible when domain abstractions and their mapping to executable code can be identified."}{"question": "What is the difference between a sub-system and a sub-system?", "answer": "* The sub-system is implemented by adding components to fill in parts of the design and by instantiating the abstract classes in the framework."}{"question": "What are the two approaches to reuse?", "answer": "> Two approaches i."}{"question": "What are the consequences of using a generator?", "answer": "> These are embedded in the generator and parameterised by user command a program is then automatically generated."}{"question": "What is the purpose of a program generator?", "answer": "Application generator for business data processing."}{"question": "What is the difference between a generic and a concrete framework?", "answer": "4 Application Framework * Generic structure that can be extended to create a more specific sub- system or application * Frameworks are sub-system design made up of collection of abstract and concrete classes and the interfaces between them."}{"question": "What are the consequences of using a pattern?", "answer": "> Consequences * The results and trade-offs of applying the pattern."}{"question": "What are the benefits of a generic ERP system?", "answer": "* Benefits in faster application development lower cost."}{"question": "What are the advantages of a generic ERP system?", "answer": "ii."}{"question": "What are the advantages of a generic ERP system?", "answer": "* Software product lines are related applications developed around a common core of shared functionality."}{"question": "What is the most common form of software reuse?", "answer": "Selecting from a library of existing components 4."}{"question": "What are the advantages of a program generator?", "answer": "* Program generators are also concerned with software reuse- the reusable concepts are embedded in a generator system."}{"question": "What are the advantages of a generic ERP system?", "answer": "g."}{"question": "What are the advantages of a generic ERP system?", "answer": "* Application frameworks are collections of concrete and abstract objects that are designed for reuse through specialisation."}{"question": "What are the advantages of reusing an ERP system?", "answer": "Fig: ERP System Organisation Key points * Advantages of reuse are lower costs, faster software development and lower risks."}{"question": "What is the key point of the article?", "answer": "3."}{"question": "What are the advantages of reusing an ERP system?", "answer": ": E- Procurement system Fig: E-Procurement System COTS product reused * On client, standard e-mail and web browsing program are used."}{"question": "What is the most common form of software reuse?", "answer": "Modifying components to meet new requirements E."}{"question": "What is the key to a successful ERP system?", "answer": "* Adaptive involves 1."}{"question": "What is the most common form of software reuse?", "answer": "Component and system configuration 2."}{"question": "What are the advantages of a generic ERP system?", "answer": "* COTS product reuse include lack of control over functionality, performance and evolution and problems with inter- operation."}{"question": "What are the advantages of a reusable system?", "answer": "* Design patterns are high-level abstractions that document successful design solutions."}{"question": "What is the most common form of software reuse?", "answer": "o This involves writing an adaptor so that they can exchange data."}{"question": "What is the difference between a generic core and a generic core?", "answer": "* The generic core is adapted by including modules and by incorporating knowledge of business process and rules."}{"question": "What is the main advantage of a generic ERP system?", "answer": "Product line development e."}{"question": "What is an ERP system?", "answer": "; ERP system (Enterprise Resource Planning) ERP system * An Enterprise Resource Planning (ERP) system is a generic system that supports common business processes such as ordering and invoicing, manufacturing, etc."}{"question": "What is the main advantage of e-commerce plat form integration?", "answer": "* On server, an e-commerce plat form has to be integration with existing ordering system."}{"question": "What is the difference between an ERP system and a generic one?", "answer": "* ERP systems are created by configuring a generic system with information about a customer\u2019s business."}{"question": "What are the advantages of a generic ERP system?", "answer": "* These are widely used in large companies- they represent probably the most common form of software reuse."}{"question": "What is the difference between a generic and a generic application?", "answer": "Software Product lines (Application Families) * Application with generic functionality that can be adapted and configured for use in specific content."}{"question": "What is the most common form of software reuse?", "answer": "Adding new components to the system."}